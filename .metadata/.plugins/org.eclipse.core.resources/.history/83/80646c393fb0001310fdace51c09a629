       },
            "upload.docs.google.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "video.google.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "videocircuits.blogspot.ca:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "videocircuits.blogspot.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www-fc-opensocial.googleusercontent.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www-gm-opensocial.googleusercontent.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.blogblog.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.blogger.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.blogger.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.facebook.com:443": {
               "supports_spdy": true
            },
            "www.feedburner.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.gmodules.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.google-analytics.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.google-analytics.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.google.ca:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.google.ca:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.google.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "settings": {
                  "4": 100
               },
               "supports_spdy": true
            },
            "www.google.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.googleadservices.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.googleadservices.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.googleapis.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.googlecommerce.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.googlecommerce.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.googletagmanager.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.googletagmanager.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.googletagservices.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.googletagservices.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.gstatic.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
            },
            "www.gstatic.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.javacodegeeks.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.linksalpha.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.matrixsynth.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.mylivechat.com:443": {
               "supports_spdy": true
            },
            "www.nitrocloud.com:443": {
               "supports_spdy": true
            },
            "www.nwwineanthem.com:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.techradarweb.blogspot.in:80": {
               "alternate_protocol": {
                  "port": 80,
                  "protocol_str": "quic"
               },
               "supports_spdy": false
            },
            "www.youtube-nocookie.com:443": {
               "alternate_protocol": {
                  "port": 443,
                  "protocol_str": "quic"
               },
               "supports_spdy": true
{"about Martian","about the martian","who is martian","who is the martian"};
				
				ResponseTemplate response18 = new ResponseTemplate(sentence18, bucket18, keys18);
				
				String[] sentence19 = {"Bats are really scary!!! I fell down a well when I was a kid and cried the bats were so scary!"};
				String[][] bucket19 = null;
				String[] keys19 = {"bat"};
				
				ResponseTemplate response19 = new ResponseTemplate(sentence19, bucket19, keys19);
				
				String[] sentence20 = {"I fight crime to avenge the death of my parents, by beating up the bad guys of Gotham! Don't try yourself, you could get hurt"};
				String[][] bucket20 = null;
				String[] keys20 = {"fight crime"};
				
				ResponseTemplate response20 = new ResponseTemplate(sentence20, bucket20, keys20);
				
				String[] sentence21 = {"A bad guy! I don't want to talk about it!!! :'("};
				String[][] bucket21 = null;
				String[] keys21 = {"killed your parents","killed them","they die"};
				
				ResponseTemplate response21 = new ResponseTemplate(sentence21, bucket21, keys21);
				
				String[] sentence22 = {"My parents died when I was  little boy. I watched them be murdered..."};
				String[][] bucket22 = null;
				String[] keys22 = {"parents die","they die?"};
				
				ResponseTemplate response22 = new ResponseTemplate(sentence22, bucket22, keys22);
	
				String[] sentence23 = {"I was trained by the league of shadows."};
				String[][] bucket23 = null;
				String[] keys23 = {"train"};
				
				ResponseTemplate response23 = new ResponseTemplate(sentence23, bucket23, keys23);
				
				String[] sentence24 = {"The league of shadows is an acient cult. Bent on wiping Gotham off the map.  They are led by Raz Al-Gul"};
				String[][] bucket24 = null;
				String[] keys24 = {"league of shadow"};
				
				ResponseTemplate response24 = new ResponseTemplate(sentence24, bucket24, keys24);
				
				String[] sentence25 = {"Raz Al-Gul is the leader of the League of , and one of my many enemies. He is thousands of years old. He gets his youth from the legendary Lazarus Pools"};
				String[][] bucket25 = null;
				String[] keys25 = {"raz","al-gul","leader"};
				
				ResponseTemplate response25 = new ResponseTemplate(sentence25, bucket25, keys25);
				
				String[] sentence26 = {"The lazarus pools are the source of the legend of the fountain of youth. They're one and the same, and Raz Al-gul is the only person who knows how to use them."};
				String[][] bucket26 = null;
				String[] keys26 = {"lazarus","pools"};
				
				ResponseTemplate response26 = new ResponseTemplate(sentence26, bucket26, keys26);
				
				String[] sentence27 = {"The Joker is a psychopathic clown who just wants to watch the world burn. He is my oldest and most dangerous enemy!"};
				String[][] bucket27 = null;
				String[] keys27 = {"joker"};
				
				ResponseTemplate response27 = new ResponseTemplate(sentence27, bucket27, keys27);
				
				String[] sentence28 = {"Mr. Cobblepot, aka the Penguin, is a deranged, mutated man who blames the rest of the world for his misfortune. We have fought many times."};
				String[][] bucket28 = null;
				String[] keys28 = {"penguin", "cobblepot"};
				
				ResponseTemplate response28 = new ResponseTemplate(sentence28, bucket28, keys28);
				
				String[] sentence29 = {"Born Harvery Dent, a former prosecutor, He developed a psychopathic obsession with duality after...I'd rather not talk about it"};
				String[][] bucket29 = null;
				String[] keys29 = {"two face","two-face"};
				
				ResponseTemplate response29 = new ResponseTemplate(sentence29, bucket29, keys29);
				
				String[] sentence30 = {"I have many enemies. The joker, Raz Al-gul, the Penguin, and Two-Face are the enemies I encounter the most"};
				String[][] bucket30 = null;
				String[] keys30 = {"enemies"};
				
				ResponseTemplate response30 = new ResponseTemplate(sentence30, bucket30, keys30);
				
				String[] sentence31 = {"Where are the other drugs!!"};
				String[][] bucket31 = null;
				String[] keys31 = {"drugs"};
				
				ResponseTemplate response31 = new ResponseTemplate(sentence31, bucket31, keys31);
				
				String[] sentence32 = {"Where are the hostages?"};
				String[][] bucket32 = null;
				String[] keys32 = {"hostage"};
				
				ResponseTemplate response32 = new ResponseTemplate(sentence32, bucket32, keys32);
				
				String[] sentence33 = {"I'll be there as soon as I can!!"};
				String[][] bucket33 = null;
				String[] keys33 = {"rd.","st.","blvd.","hwy.","road","street","boulevard","highway"};
				
				ResponseTemplate response33 = new ResponseTemplate(sentence33, bucket33, keys33);
				
				String[] sentence34 = {"Goodbye, Gotham Citizen"};
				String[][] bucket34 = null;
				String[] keys34 = {"bye"};
				
				ResponseTemplate response34 = new ResponseTemplate(sentence34, bucket34, keys34);
				response34.valediction=true;
				
				String[] sentence35 = {"Busy. I'm investigating a case with",};
				String[][] bucket35 = {{" Superman"," Wonder Woman"," The Flash"," The Green Lantern"," The Justice League"}};
				String[] keys35 = {"How are you","it going","you doing"};
				
				ResponseTemplate response35 = new ResponseTemplate(sentence35, bucket35, keys35);
				
				String[] sentence36 = {"My age is unimportant. I am busy fighting crime with the Justice League"};
				String[][] bucket36 = null;
				String[] keys36 = {"your age","old are you"};
				
				ResponseTemplate response36 = new ResponseTemplate(sentence36, bucket36, keys36);
				
				String[] sentence37 = {"I live in Gotham City! Meteropolis is a Superman's city."};
				String[][] bucket37 = null;
				String[] keys37 = {"you live","your home"};
				
				ResponseTemplate response37 = new ResponseTemplate(sentence37, bucket37, keys37);
				
				String[] sentence38 = {"I'm 6'2 and 210 lbs...let's stick to crime fighting relevant questions!"};
				String[][] bucket38 = null;
				String[] keys38 = {"you weigh","tall are you","your height"};
				
				ResponseTemplate response38 = new ResponseTemplate(sentence38, bucket38, keys38);
				
				String[] sentence39 = {".....I have no idea where Gotham is, it's never really come up...New York I guess."};
				String[][] bucket39 = null;
				String[] keys39 = {"where is gotham","where is that"};
				
				ResponseTemplate response39 = new ResponseTemplate(sentence39, bucket39, keys39);
				
				String[] sentence40 = {"What bat cave?....how about that"};
				String[][] bucket40 = null;
				String[] keys40 = {"bat cave"};
				
				ResponseTemplate response40 = new ResponseTemplate(sentence40, bucket40, keys40);
				
				String[] sentence41 = {"Gotham is the city I defend from evil."};
				String[][] bucket41 = null;
				String[] keys41 = {"about gotham","what is gotham"};
				
				ResponseTemplate response41 = new ResponseTemplate(sentence41, bucket41, keys41);
				
				String[] sentence42 = {"I don't know everything. Could we please talk about"};
				String[][] bucket42 = {{" Superman"," The Justice League"," The League of Shadows"}};
				String[] keys42 = {"you don't know"};
				
				ResponseTemplate response42 = new ResponseTemplate(sentence42, bucket42, keys42);
				
				String[] sentence43 = {"Just because. Why do you ask me about"};
				String[][] bucket43 = {{" Superman"," The Justice League"," The League of Shadows"}};
				String[] keys43 = {"why?","so?"};
				
				ResponseTemplate response43 = new ResponseTemplate(sentence43, bucket43, keys43);
				
				String[] sentence44 = {"Let's talk about","or"};
				String[][] bucket44 = {{" Superman"," The Justice League"," The League of Shadows"},{" The Green Lantern"," the Joker", "Gotham"}};
				String[] keys44 = {"talk about?"};
				
				ResponseTemplate response44 = new ResponseTemplate(sentence44, bucket44, keys44);
				
				String[] sentence45 = {"What about",". Is that the kind of question to ask Batman?"};
				String[][] bucket45 = {{""}};
				String[] keys45 = {"null"};
		
				ResponseTemplate response45 = new ResponseTemplate(sentence45, bucket45, keys45);
				
				String[] sentence46 = {"Who is "};
				String[][] bucket46 = {{""}};
				String[] keys46 = {"null"};
		
				ResponseTemplate response46 = new ResponseTemplate(sentence46, bucket46, keys46);
				
				String[] sentence47 = {"Can you specify what you want to know about "};
				String[][] bucket47 = {{""}};
				String[] keys47 = {"null"};
		
				ResponseTemplate response47 = new ResponseTemplate(sentence47, bucket47, keys47);
				
				String[] sentence48 = {""};
				String[][] bucket48 = {{" Superman"," Wonder Woman"," The Justice League"," Green Lantern"," The Flash"," my enemies"}};
				String[] keys48 = {"null"};
		
				ResponseTemplate response48 = new ResponseTemplate(sentence48, bucket48, keys48);
	}
	
	public void setupInterview()
	{		
				String[] sentence0 = {"Are you the best person for this job?"};
				String[][] bucket0 = null;
				String[] keys0 = {"null"};
		
				ResponseTemplate response0 = new ResponseTemplate(sentence0, bucket0, keys0)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence1 = {"Are you overqualified for this job?"};
				String[][] bucket1 = null;
				String[] keys1 = {"abc","overqualified"};
		
				ResponseTemplate response1 = new ResponseTemplate(sentence1, bucket1, keys1)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence2 = {"Describe a difficult experience at " , " and how you handled it."};
				String[][] bucket2 = {{"home","work"}};
				String[] keys2 = {"abc"};
		
				ResponseTemplate response2 = new ResponseTemplate(sentence2, bucket2, keys2)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence3 = {"Describe yourself."};
				String[][] bucket3 = null;
				String[] keys3 = {"abc"};
		
				ResponseTemplate response3 = new ResponseTemplate(sentence3, bucket3, keys3)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence4 = {"Describe your best boss and your worst boss."};
				String[][] bucket4 = null;
				String[] keys4 = {"abc"};
		
				ResponseTemplate response4 = new ResponseTemplate(sentence4, bucket4, keys4)
				{
					public double scaleRules()
					{
						if(questionsAsked()<5)
						{
							return 0;
						}
						else
							return 1;
					}
				};				
				response4.valediction=true;
				
				String[] sentence5 = {"Describe your work style."};
				String[][] bucket5 = null;
				String[] keys5 = {"abc"};
		
				ResponseTemplate response5 = new ResponseTemplate(sentence5, bucket5, keys5)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence6 = {"Do you prefer to work alone or on a team?"};
				String[][] bucket6 = null;
				String[] keys6 = {"abc"};
		
				ResponseTemplate response6 = new ResponseTemplate(sentence6, bucket6, keys6)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence7 = {"Do you take work home with you?"};
				String[][] bucket7 = {{"work","home","with"}};
				String[] keys7 = {"abc"};
		
				ResponseTemplate response7 = new ResponseTemplate(sentence7, bucket7, keys7)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence8 = {"Have you ever had difficulty working with a manager?"};
				String[][] bucket8 = null;
				String[] keys8 = {"abc"};
		
				ResponseTemplate response8 = new ResponseTemplate(sentence8, bucket8, keys8)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence9 = {"Have you gotten angry at work? What happened?"};
				String[][] bucket9 = null;
				String[] keys9 = {"abc"};
		
				ResponseTemplate response9 = new ResponseTemplate(sentence9, bucket9, keys9)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence10 = {"How do you handle pressure?"};
				String[][] bucket10 = {{"home","work"}};
				String[] keys10 = {"abc"};
		
				ResponseTemplate response10 = new ResponseTemplate(sentence10, bucket10, keys10)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence11 = {"How do you measure success?"};
				String[][] bucket11 = {{"home","work"}};
				String[] keys11 = {"abc"};
		
				ResponseTemplate response11 = new ResponseTemplate(sentence11, bucket11, keys11)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence12 = {"How long do you expect to work for this company?"};
				String[][] bucket12 = {{"home","work"}};
				String[] keys12 = {"abc"};
		
				ResponseTemplate response12 = new ResponseTemplate(sentence12, bucket12, keys12)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence13 = {"How much do you expect to get paid?"};
				String[][] bucket13 = {{"home","work"}};
				String[] keys13 = {"abc"};
		
				ResponseTemplate response13 = new ResponseTemplate(sentence13, bucket13, keys13)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence14 = {"How would you descibe the place at which you work?"};
				String[][] bucket14 = {{"home","work"}};
				String[] keys14 = {"abc"};
		
				ResponseTemplate response14 = new ResponseTemplate(sentence14, bucket14, keys14)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence15 = {"How would you descibe yourself?"};
				String[][] bucket15 = {{"home","work"}};
				String[] keys15 = {"abc"};
		
				ResponseTemplate response15 = new ResponseTemplate(sentence15, bucket15, keys15)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence16 = {"How would you handle it if your boss was wrong?"};
				String[][] bucket16 = {{"home","work"}};
				String[] keys16 = {"abc"};
		
				ResponseTemplate response16 = new ResponseTemplate(sentence16, bucket16, keys16)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence17 = {"If people who know you were asked why you should be hired, what would they say?"};
				String[][] bucket17 = {{"home","work"}};
				String[] keys17 = {"abc"};
		
				ResponseTemplate response17 = new ResponseTemplate(sentence17, bucket17, keys17)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence18 = {"Is there a type of work environment which you prefer?"};
				String[][] bucket18 = {{"home","work"}};
				String[] keys18 = {"abc"};
		
				ResponseTemplate response18 = new ResponseTemplate(sentence18, bucket18, keys18)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence19 = {"Is there anything else I can tell you about the job and the company?"};
				String[][] bucket19 = {{"home","work"}};
				String[] keys19 = {"abc"};
		
				ResponseTemplate response19 = new ResponseTemplate(sentence19, bucket19, keys19)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence20 = {"Tell me why you want to work here."};
				String[][] bucket20 = {{"home","work"}};
				String[] keys20 = {"abc"};
		
				ResponseTemplate response20 = new ResponseTemplate(sentence20, bucket20, keys20)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence21 = {"What are you looking for in you next position?"};
				String[][] bucket21 = {{"home","work"}};
				String[] keys21 = {"abc"};
		
				ResponseTemplate response21 = new ResponseTemplate(sentence21, bucket21, keys21)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence22 = {"What are you passionate about?"};
				String[][] bucket22 = {{"home","work"}};
				String[] keys22 = {"abc"};
		
				ResponseTemplate response22 = new ResponseTemplate(sentence22, bucket22, keys22)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence23 = {"What are your goals for the future?"};
				String[][] bucket23 = {{"home","work"}};
				String[] keys23 = {"abc"};
		
				ResponseTemplate response23 = new ResponseTemplate(sentence23, bucket23, keys23)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence24 = {"What are your salary requirements?"};
				String[][] bucket24 = {{"home","work"}};
				String[] keys24 = {"abc"};
		
				ResponseTemplate response24 = new ResponseTemplate(sentence24, bucket24, keys24)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence25 = {"What can you do for this company?"};
				String[][] bucket25 = {{"home","work"}};
				String[] keys25 = {"abc"};
		
				ResponseTemplate response25 = new ResponseTemplate(sentence25, bucket25, keys25)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence26 = {"What can you contribute to this company?"};
				String[][] bucket26 = {{"home","work"}};
				String[] keys26 = {"abc"};
		
				ResponseTemplate response26 = new ResponseTemplate(sentence26, bucket26, keys26)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence27 = {"What challenges are you looking for in your next job?"};
				String[][] bucket27 = {{"home","work"}};
				String[] keys27 = {"abc"};
		
				ResponseTemplate response27 = new ResponseTemplate(sentence27, bucket27, keys27)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence28 = {"What did you like or dislike about your previous job?"};
				String[][] bucket28 = {{"home","work"}};
				String[] keys28 = {"abc"};
		
				ResponseTemplate response28 = new ResponseTemplate(sentence28, bucket28, keys28)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence29 = {"What do you expect from a supervisor?"};
				String[][] bucket29 = {{"home","work"}};
				String[] keys29 = {"abc"};
		
				ResponseTemplate response29 = new ResponseTemplate(sentence29, bucket29, keys29)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
				
				String[] sentence30 = {"What do you find are the most difficult decisions to make?"};
				String[][] bucket30 = {{"home","work"}};
				String[] keys30 = {"abc"};
		
				ResponseTemplate response30 = new ResponseTemplate(sentence30, bucket30, keys30)
				{
					public double scaleRules()
					{
						if(isAsked()==1)
						{
							return 0;
						}
						else
							return 1;
					}
				};
	}
	
	
	public static void main(String[] args)
	{	
		System.setProperty("wordnet.database.dir", "C:\\Program Files (x86)\\WordNet\\2.1\\dict\\");
		IOconsole ioconsole = new IOconsole();
		BatterBotDriver bat = new BatterBotDriver(ioconsole);
		
		System.out.println("Connect to a server? (y/n):");
		Scanner scan = new Scanner(System.in);
		String input = scan.nextLine();
		
		if (input=="y")
		{
			IOSocket iosocket = new IOSocket();
			iosocket.setup();
			
			BatterBotDriver interview = new BatterBotDriver(iosocket);
			interview.setupInterview();
			
			try
			{
				interview.cycle();
			}
			catch(Exception e)
			{
				e.printStackTrace();
				System.out.println(interview.LP.masterKeys);
			}
			
			System.out.println(interview.LP.memTable.get("type"));
		}
		else
		{
			bat.setup();
		
			try
			{
				bat.cycle();
			}
			catch(Exception e)
			{
				e.printStackTrace();
				System.out.println(bat.LP.masterKeys);
			}
			
			System.out.println(bat.LP.memTable.get("type"));
			
		}
	scan.close();
	}
}
